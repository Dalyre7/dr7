import socket
from concurrent.futures import ThreadPoolExecutor

def scan_port(ip, port):
    try:
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as sock:
            sock.settimeout(0.5)
            sock.connect((ip, port))
            return True
    except:
        return False

def scan_ports(ip, start_port=1, end_port=1024):
    open_ports = []
    with ThreadPoolExecutor(max_workers=100) as executor:
        futures = {executor.submit(scan_port, ip, port): port for port in range(start_port, end_port + 1)}
        for future in futures:
            port = futures[future]
            if future.result():
                print(f"Port {port} is open!")
                open_ports.append(port)
    return open_ports

if __name__ == "__main__":
    target_ip = input("Enter target IP address: ").strip()
    print(f"Scanning ports on {target_ip}...")
    open_ports = scan_ports(target_ip)
    print(f"Scan complete. Open ports: {open_ports}")


